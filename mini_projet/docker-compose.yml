version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-network

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - microservices-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - microservices-network

  parfum-service:
    build: ./parfum
    ports:
      - "50060:50053"
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=50053
      - HTTP_PORT=3003
      - MONGODB_URI=mongodb://mongodb:27017/perfume_db
    depends_on:
      - mongodb
    networks:
      - microservices-network

  api-gateway:
    build:
      context: ./apiGateway
    ports:
      - "3001:3001"
    depends_on:
      - kafka
      - parfum-service
      - mongodb
    environment:
      - KAFKAJS_NO_PARTITIONER_WARNING=1
      - MONGODB_URI=mongodb://mongodb:27017/perfume_db
      - PORT=3001
    networks:
      - microservices-network

  payment-service:
    build:
      context: ./payment
    ports:
      - "50057:50054"
    depends_on:
      - kafka
    environment:
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    networks:
      - microservices-network

  delivery-service:
    build:
      context: ./delivery
    ports:
      - "50058:50055"
    depends_on:
      - kafka
    environment:
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    networks:
      - microservices-network

volumes:
  mongodb_data:

networks:
  microservices-network:
    driver: bridge
